#!/usr/bin/env node

var _ = require("underscore");
var program = require("commander");
var tisdk = require("../index");
var chalk = require("chalk");
var fs = require("fs");
var path = require("path");
var AdmZip = require("adm-zip");
var appc = require("node-appc");
var os =  require('os');

var TITANIUM = path.join(process.env.HOME, 'Library', 'Application Support', 'Titanium');
var platform = "osx";

if (os.platform()=="linux"){
  TITANIUM = path.join(process.env.HOME, '.titanium');
  platform = "linux";
}

program
.version(require("../package.json").version);

program
.command("list")
.option("-g, --ga-only", "List GA releases only")
.description("List available GA releases")
.action(function(o) {
  tisdk.getGATags(function(tags) {
    tags.map(function(tag) {
      var version = tag.name.replace(/_/g, ".");
      var type = version.split(".")[3];
      if (type==="GA") {
        console.log(chalk.bold.green(version));
      } else if (!o.gaOnly) {
        console.log(version);
      }
    });
  });
});

program
.description("Install a GA version")
.command("install [version]")
.action(function(version) {

  var tmp_file = "mobilesdk-" + version + "-"+platform+".zip";
  tisdk.download(version, tmp_file, function(build){
    console.log("Unzipping...");
    appc.zip.unzip(tmp_file, TITANIUM, {
      visitor: function(entry, i, len) {
        process.stdout.clearLine();
        process.stdout.cursorTo(0);
        process.stdout.write("Unzipping (" + i + "/" + len + ") : " + chalk.grey(entry.entryName) );
      }
    }, function() {
      var source = path.join(TITANIUM, "mobilesdk", platform, build.filename.split("-")[1]);
      var target = path.join(TITANIUM, "mobilesdk", platform, version);
      console.log("");
      console.log("Renaming " + source + " to " + target);
      fs.renameSync(source, target);
      fs.unlinkSync(tmp_file);
      console.log("Installed Successfully!");
    });
  });

});


program
.description("Download a GA version")
.command("download [version]")
.action(function(version) {
  var tmp_file = "mobilesdk-" + version + "-"+platform+".zip";
  tisdk.download(version, tmp_file, function(build){
    console.log("Done.");
  });
});

program.parse(process.argv);
if (program.args.length === 0 || typeof program.args[program.args.length -1] === 'string'){
  program.help();
}
